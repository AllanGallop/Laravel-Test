{
    "openapi": "3.0.0",
    "info": {
        "title": "Assessment API Documentation",
        "description": "This is the API documentation for the WatchTwr assessment",
        "contact": {
            "email": "allangallop@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "API Server"
        }
    ],
    "paths": {
        "/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get the user's cart",
                "operationId": "294e093bf29c111c01d8402121fb4f43",
                "responses": {
                    "200": {
                        "description": "Cart retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cart": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "total": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add or update a product in the cart",
                "operationId": "17edc07162b12ee962c37746abcf34a5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added/updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Clear the authenticated user's cart",
                "operationId": "f27f693c4455063ce50cc97de2aa9465",
                "responses": {
                    "200": {
                        "description": "Cart cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/checkout": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Checkout a user's cart and place an order",
                "description": "This endpoint allows a user to checkout their cart and create an order.",
                "operationId": "f84798ad40289182e62f10ecfeb66afc",
                "responses": {
                    "200": {
                        "description": "Order successfully created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "total_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 99.99
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order placed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Failed to process the checkout.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process the checkout. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. User must be authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of orders",
                "description": "List all orders for the authenticated user.",
                "operationId": "2cd7e03021e72d9d799c12dfe179c865",
                "responses": {
                    "200": {
                        "description": "List of orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "total_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 120.5
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details",
                "description": "Get details of a specific order.",
                "operationId": "c29621029e70f65247909d3e09031118",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "total_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 120.5
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "completed"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "order_items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "unit_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 30.25
                                                    },
                                                    "sub_total_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 60.5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Returns a paginated list of products",
                "operationId": "1d83efbd6c8b6354f3714a56a4528310",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product by ID",
                "description": "Returns details of a single product by ID",
                "operationId": "728e1fdccd8ff1e63bdcf7aa6d2edcbf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Order": {
                "title": "Order",
                "description": "Order model",
                "required": [
                    "id",
                    "user_id",
                    "total_price",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "ID of the user who placed the order",
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "total_price": {
                        "description": "Total price of the order",
                        "type": "number",
                        "format": "float",
                        "example": 150.75
                    },
                    "status": {
                        "description": "Order status",
                        "type": "string",
                        "example": "pending"
                    },
                    "created_at": {
                        "description": "Timestamp when the order was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the order was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "order_items": {
                        "description": "List of items in the order",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "title": "OrderItem",
                "description": "Represents an item within an order",
                "required": [
                    "id",
                    "order_id",
                    "product_id",
                    "quantity",
                    "unit_price",
                    "sub_total_price"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "order_id": {
                        "description": "ID of the associated order",
                        "type": "integer",
                        "format": "int64",
                        "example": 101
                    },
                    "product_id": {
                        "description": "ID of the product in the order",
                        "type": "integer",
                        "format": "int64",
                        "example": 50
                    },
                    "quantity": {
                        "description": "Quantity of the product in the order",
                        "type": "integer",
                        "example": 2
                    },
                    "unit_price": {
                        "description": "Price per unit of the product",
                        "type": "number",
                        "format": "float",
                        "example": 19.99
                    },
                    "sub_total_price": {
                        "description": "Total price for this order item (unit_price * quantity)",
                        "type": "number",
                        "format": "float",
                        "example": 39.98
                    },
                    "created_at": {
                        "description": "Timestamp when the order item was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the order item was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "required": [
                    "id",
                    "name",
                    "price",
                    "stock_level"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Product Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Product Description"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "stock_quantity": {
                        "type": "integer",
                        "example": 10
                    },
                    "restock_quantity": {
                        "type": "integer",
                        "example": 5
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "User's full name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "description": "Timestamp when the email was verified",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "profile_photo_url": {
                        "description": "URL to the user's profile photo",
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/profile.jpg"
                    },
                    "is_admin": {
                        "description": "Indicates whether the user is an admin",
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "description": "Timestamp when the user was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the user was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Products",
            "description": "Products"
        }
    ]
}